if ($args.Count -ne 3) {
    Write-Host "Please provide following arguments"
    Write-Host "Debug, Release, RelWithDebInfo"
    Write-Host "wajs repo path"
    Write-Host ".build output path"
    Write-Host "ex: ./copy-binding.ps1 Debug ~/wajs ~/wajs/web/.build/output"
    exit 1
}

$config = $args[0]
$wajs = Resolve-Path $args[1]
try{
    $buildpath = Resolve-Path $args[2] -ErrorAction Stop
}
catch{
    Write-Host "Fail to resolve build output path: "$args[2]""
    Write-Host 'Copy-Item failed' -fore red
    exit 1
}


if (($config -ne "Debug") -and ($config -ne "Release") -and ($config -ne "RelWithDebInfo")) {
    Write-Host "Only Debug, Release or RelWithDebInfo"
    exit 1
}

if ($config -eq "RelWithDebInfo") {
    $config="Release"
}

$source = "$wajs\web\custom_modules\wavoip\build\$config\binding.node"
$destination = "$buildpath\WhatsApp-win32-x64\resources\app.asar.unpacked\node_modules\wavoip\build\$config\binding.node"

Write-Host "Waiting for WhatsApp to close"
while (Get-Process WhatsApp -ErrorAction SilentlyContinue) {
    Start-Sleep -s 1
}
Write-Host "WhatsApp is closed"

if (!(Test-Path $source -PathType Leaf)) {
    Write-Host "File does not exist: $source"
}

if (!(Test-Path $destination -PathType Leaf)) {
    Write-Host "File does not exist: $destination"
}

try{
    Copy-Item $source $destination -ErrorAction stop
    Write-Host 'Copy-Item succeeded' -fore green
}
catch{
    Write-Host 'Copy-Item failed' -fore red
    exit 1
}
